// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateUserOKCode is the HTTP code returned for type CreateUserOK
const CreateUserOKCode int = 200

/*CreateUserOK OK

swagger:response createUserOK
*/
type CreateUserOK struct {

	/*
	  In: Body
	*/
	Payload *CreateUserOKBody `json:"body,omitempty"`
}

// NewCreateUserOK creates CreateUserOK with default headers values
func NewCreateUserOK() *CreateUserOK {

	return &CreateUserOK{}
}

// WithPayload adds the payload to the create user o k response
func (o *CreateUserOK) WithPayload(payload *CreateUserOKBody) *CreateUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user o k response
func (o *CreateUserOK) SetPayload(payload *CreateUserOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateUserOK) CreateUserResponder() {}

// CreateUserUnauthorizedCode is the HTTP code returned for type CreateUserUnauthorized
const CreateUserUnauthorizedCode int = 401

/*CreateUserUnauthorized PIN is missing or invalid

swagger:response createUserUnauthorized
*/
type CreateUserUnauthorized struct {
}

// NewCreateUserUnauthorized creates CreateUserUnauthorized with default headers values
func NewCreateUserUnauthorized() *CreateUserUnauthorized {

	return &CreateUserUnauthorized{}
}

// WriteResponse to the client
func (o *CreateUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *CreateUserUnauthorized) CreateUserResponder() {}

// CreateUserConflictCode is the HTTP code returned for type CreateUserConflict
const CreateUserConflictCode int = 409

/*CreateUserConflict Conflict

swagger:response createUserConflict
*/
type CreateUserConflict struct {

	/*
	  In: Body
	*/
	Payload *CreateUserConflictBody `json:"body,omitempty"`
}

// NewCreateUserConflict creates CreateUserConflict with default headers values
func NewCreateUserConflict() *CreateUserConflict {

	return &CreateUserConflict{}
}

// WithPayload adds the payload to the create user conflict response
func (o *CreateUserConflict) WithPayload(payload *CreateUserConflictBody) *CreateUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user conflict response
func (o *CreateUserConflict) SetPayload(payload *CreateUserConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateUserConflict) CreateUserResponder() {}

// CreateUserInternalServerErrorCode is the HTTP code returned for type CreateUserInternalServerError
const CreateUserInternalServerErrorCode int = 500

/*CreateUserInternalServerError internal error

swagger:response createUserInternalServerError
*/
type CreateUserInternalServerError struct {
}

// NewCreateUserInternalServerError creates CreateUserInternalServerError with default headers values
func NewCreateUserInternalServerError() *CreateUserInternalServerError {

	return &CreateUserInternalServerError{}
}

// WriteResponse to the client
func (o *CreateUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *CreateUserInternalServerError) CreateUserResponder() {}

type CreateUserNotImplementedResponder struct {
	middleware.Responder
}

func (*CreateUserNotImplementedResponder) CreateUserResponder() {}

func CreateUserNotImplemented() CreateUserResponder {
	return &CreateUserNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.CreateUser has not yet been implemented",
		),
	}
}

type CreateUserResponder interface {
	middleware.Responder
	CreateUserResponder()
}
